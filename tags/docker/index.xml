<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Docker on MrGossett </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://mrgossett.com/tags/docker/</link>
    <language>en-us</language>
    
    
    <updated>Mon, 19 Oct 2015 21:09:16 EDT</updated>
    
    <item>
      <title>docker inspect | grep</title>
      <link>http://mrgossett.com/post/docker-inspect-grep/</link>
      <pubDate>Mon, 19 Oct 2015 21:09:16 EDT</pubDate>
      
      <guid>http://mrgossett.com/post/docker-inspect-grep/</guid>
      <description>We&amp;rsquo;ve dockerized all of the apps the comprise our platform at work. Almost all of the configuration data that our apps need is provided via environment variables. Sometimes I need to verify that the correct configuration was provided for a particular environment variable. I&amp;rsquo;ve executed the following command enough times now that I figured I should write it down somewhere. # $cid is the target container&#39;s ID, and $var is some part of the environment variable&#39;s name docker inspect -f &#39;{{range $_, $e := .Config.Environment}}{{println $e}}{{end}}&#39; $cid | grep $var This executes docker inspect with a Go template that will loop through the container&amp;rsquo;s environment variables (which are stored as a flat array of strings like [&amp;quot;VAR1=value1&amp;quot;, &amp;quot;VAR2=value2&amp;quot;]) and print each variable on a new line.</description>
    </item>
    
    <item>
      <title>~/.dockerrc</title>
      <link>http://mrgossett.com/post/dockerrc/</link>
      <pubDate>Fri, 20 Feb 2015 21:06:46 -0400</pubDate>
      
      <guid>http://mrgossett.com/post/dockerrc/</guid>
      <description>We use Docker at work as part of our deployment strategy. Since we ship dockerized apps, Docker is part of our development environment. I develop in OS X, so I use Boot2Docker. One of the original core contributors to Docker, @creack, was part of our team for a while. It was a great opportunity to get familiar with Docker as a technology. He helped me put together a ~/.dockerrc file that ensures my development environment is always ready to go.</description>
    </item>
    
  </channel>
</rss>

